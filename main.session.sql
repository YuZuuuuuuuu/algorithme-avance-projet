CREATE TABLE IF NOT EXISTS users (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  firstname VARCHAR(255) NOT NULL,
  lastname VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL UNIQUE,
  pwd VARCHAR(255) NOT NULL,
  registration DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS skills (
  id INTEGER PRIMARY KEY AUTOINCREMENT, -- Ajout d'un ID pour chaque skill
  skill_name VARCHAR(255) NOT NULL,
  level INT NOT NULL,
  user_id INTEGER NOT NULL,
  FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS visite (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  lastname VARCHAR(255) NOT NULL,
  oeuvre VARCHAR(255) NOT NULL,
  horaire DATETIME
);

CREATE TABLE IF NOT EXISTS proposition (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  lastname VARCHAR(255) NOT NULL,
  proposition VARCHAR(255) NOT NULL,
  horaire DATETIME
);

CREATE TABLE IF NOT EXISTS oeuvre (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  title VARCHAR(255) NOT NULL
);


CREATE TABLE IF NOT EXISTS vote (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,  -- Assurez-vous que c'est un INTEGER
    oeuvre_id INTEGER NOT NULL,  -- Assurez-vous que c'est un INTEGER
    horaire DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id), 
    FOREIGN KEY (oeuvre_id) REFERENCES oeuvres(id)
);

